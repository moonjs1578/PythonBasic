'''
#절차지향 프로그래밍(c)
# 1.함수를 만드록 순차적으로 프로그램이 동작하는 방식
# 2.객체나 클래스를 만들 필요없이 바로 코딩 가능
#     (함수 호출가능,프로그램 호출 쉽게 추적가능)
# 3.코드끼리 유기성이 높아 새로운 데이터나 기능 추적하기 어려움
#    코드 재사용 불가,유지보수 어려움)


#객체지향 프로그래밍(java,python)
# 1.각 객체에서 수행할 수 있는 함수와 필드(변수)를 묶어서 하나의 
#   클래스를만들고,기능을 객체로 만들어 동작하는 방식
# 2.캡슐화(모듈화)로 인행 유지보수 용이
# 3.객체 자체가 하나의 프로그램이기 때문에 상속처럼 코드재사용이 용이
# 4.많은  양의 메모리 필요해서 속도가 느림,설계하는데 시간필요




#  class란?
#  실세계의 것으 모델링하여 속성과 동작을 갖는 데이터 타입\
#  python 에서는 모드넋이 객체입니다
#  -java 기본자료형(프리미티브),객체자료형(레퍼런스) java
#   python 객체자료형 (레퍼런스)






# 객체 object란?
# 클래스로 생성되어 구체ㅗ하된 객체(인스턴스)
# 실제로 class기 인스턴스롸되어 메모리에 상주하느 상태의미
# class가 빵틀이라면 object는 실제로 빵틀로 찍어낸 빵

# class(힐스테이트 설계도면)-객체생성-수완동(수완힐스테이트:인스턴스)
# class(힐스테이트 설계도면)-객체생성-봉선동(봉선힐스테이트:인스턴스)
# class(힐스테이트 설계도면)-객체생성-학동(학동힐스테이트:인스턴스)


# 객체 사용 3단계
# 1.class 작성
class ChosunTest:
    #클래스에 소속된 멤버함수는
    # 첫번째 매개변수로  self인자를 반드시 받아야함
    # self:생성된 인스턴스(me)
    def print_name (self,name):
        print(name)
        
# 2.객체생성(인스턴스)
# test=ChosunTest() # 소괄호가 붙으면 함수임, 함수(스네이크 표기법)
    #생성자 함수(파스칼 표기법)- 생성자 함수는 클래스 이름과 동일한 이름을 가져야함
    # class 작성시 생성자 함수를 생략하면 자동으로 기본생성자 함수를 생성함(파이썬) 
# 3.인스턴스 사용
test.print_name('초롱')

class Parent:
    def print_star(self)
        print('star')
        
#parent= Parent()
#parent.print_star()


class Child(Parent):
    
# ch=Child()
# ch.print.star()






# 기본자료형:변수에 실제 갑이 저장
# 객체자료형:변수에 실제값이 위치한 주소가 저장
# 모델링:현실세계를 컴퓨터 세계 구현한것
# null :값이 없다(x)
    #    :참조할 주소가 없다(o)   ---예를 들어 어떤값을 저장하고 거기에 주소가 생겼는데 그값이 삭제가 
                                    # 되어버렸어 그러면 그거를 불러와도 참조할 주소가 없는것이지
                                    
                                    
a=4
b=a+1
print(id(a))
print(id(b))



# 우체부(현실세계) --> 컴퓨터의세계(우체부 class)
# 우체부가          classs 우쳅
# 편지를            무엇-편지
# 배달한다            def 배달한다(누가,무엇):
                     #  우체부가 편지를 배달한다
                     '''